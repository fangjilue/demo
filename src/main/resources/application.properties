##运行时可以指定：2种方式
# java -jar demo-1.0-SNAPSHOT.jar --spring.profiles.active=test
# java -Dspring.profiles.active=test -jar demo-1.0-SNAPSHOT.jar

spring.profiles.active=${run.mode}

#出现错误时,直接抛出异常,让RobbieExceptionHandler接管NoHandlerFoundException
spring.mvc.throw-exception-if-no-handler-found=true
#不要为我们工程中的资源文件建立映射
spring.resources.add-mappings=false

#这样操作后，发现确实可以抛出NoHandlerFoundException异常了，
#但是由于我们上面配置关闭了静态资源映射，所以这时候我们项目的静态资源没法访问了，我们需要手动定义静态资源的映射，
#比如我们集成了swagger，会发现/swagger-ui.html页面没法访问了，我们需要手动定义静态资源映射
#https://blog.csdn.net/qq_36666651/article/details/81135139

redis.maxIdle=300
redis.maxTotal=600
redis.maxWaitMillis=1000
redis.testOnBorrow=true
redis.minIdle=1
redis.testOnReturn=true
redis.testWhileIdle=true

redis.masterName=mymaster
redis.host.a=192.168.50.222\:26379
redis.host.b=192.168.50.222\:26380
redis.host.c=192.168.50.222\:26381
redis.password=123456


# 配置freemarker
spring.freemarker.template-loader-path=classpath:/templates/
spring.freemarker.cache=false
spring.freemarker.charset=UTF-8
spring.freemarker.check-template-location=true
spring.freemarker.content-type=text/html
spring.freemarker.expose-request-attributes=false
spring.freemarker.expose-session-attributes=false
spring.freemarker.expose-spring-macro-helpers=true
spring.freemarker.request-context-attribute=request
spring.freemarker.suffix=.html

# 去掉默认的错误页使用freemarker 页面
server.error.whitelabel.enabled=false
